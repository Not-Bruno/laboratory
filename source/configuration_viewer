#!/bin/bash
# CREATED BY Bruno

# Colordefinition for printmessage function
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m' # Reset Farbe

# Helper function for colored messages
print_msg() {
    echo -e "${1}${2}${NC}"
}

#############################
# Check if executed as root #
#############################
if [ "$(id -u)" -ne 0 ]; then
    print_msg "$RED" ">> This script must be run as root or root privileges."
    exit 1
fi

show_configuration() {
    if ! command -v yq &>/dev/null; then
        print_msg "$RED" ">> 'yq' ist not installed run setup to fix the issue"
        exit 1
    fi

    local config_file="./source/configuration.yaml"

    if [ -f "$config_file" ]; then
        print_msg "$BLUE" ">> Showing content of $config_file:"
        print_msg "$BLUE" " > Configuration file is located at:$NC $(realpath $config_file)"
        # Extract services and iterate over them
        local services=$(yq eval '.services | keys' "$config_file" | sed 's/- //g')
        local index=0

        for service in $services; do
            local enabled=$(yq eval ".services.\"$service\".enabled" "$config_file")
            local port=$(yq eval ".services.\"$service\".port" "$config_file")
            index=$((index + 1))

            # Check service status and format output
            if [ "$enabled" == "yes" ]; then
                print_msg "$GREEN" "[$index] - $service: aktiv - Port: ${port:-'nicht definiert'}"
            else
                print_msg "$RED" "[$index] - $service: inaktiv"
            fi
        done
    else
        print_msg "$RED" ">> Configuration file not found."
    fi
}

#################################
# Main script execution         #
#################################
main() {
    show_configuration
}

main # entrypoint

# CREATED BY Bruno
