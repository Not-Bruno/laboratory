#!/bin/bash

# define colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m' # Keine Farbe (reset)

# Check if executed as root
#####################################################
if [ "$(id -u)" -ne 0 ]; then
    echo -e "${RED}>> This script must be run as root.${NC}"
    exit 1
fi

# Get Linux-Distro-Informations from /etc/os-release
#####################################################
if [ -f /etc/os-release ]; then
    . /etc/os-release

    if [[ "$ID" == "kali" ]]; then
        echo -e "${RED}>> This script does not support Kali Linux. Exiting...${NC}"
        exit 1
    else
        echo -e "${GREEN} > Detected Linux distribution: $NAME ($ID)${NC}"
    fi
else
    echo -e "${RED}>> Error: /etc/os-release not found. Unable to determine the Linux distribution.${NC}"
    exit 1
fi

#########################################################
# 		define FUNCTIONS			#
#########################################################

# detect system packagemanager
detectPackageManager() {
    if command -v apt >/dev/null 2>&1; then
        echo "apt"
    elif command -v pacman >/dev/null 2>&1; then
        echo "pacman"
    elif command -v dnf >/dev/null 2>&1; then
        echo "dnf"
    elif command -v yum >/dev/null 2>&1; then
        echo "yum"
    elif command -v zypper >/dev/null 2>&1; then
        echo "zypper"
    elif command -v apk >/dev/null 2>&1; then
        echo "apk"
    else
        echo -e "${RED}>> Unknown package manager${NC}"
    fi
}

# definition executionCall()
executionCall() {
    local packageManager="$1"

    if [[ "$packageManager" == "apt" ]]; then
        echo -e "${GREEN} > Detected Main Package Manager is apt${NC}"
	    echo -e "${GREEN} > Install docker engine ...${NC}"
	    apt update && apt install docker -y
	    echo -e "${GREEN} > Start docker.service ...${NC}"
	    systemctl start docker.service
	    echo -e "${GREEN} > Install docker-compose ...${NC}"
	    apt install docker-compose -y
	    echo -e "${GREEN} > Setup default compose ...${NC}"
	    docker-compose -f docker/default.docker-compose.yml up -d
	    echo -e "${GREEN}>> Setup completed${NC}"

    elif [[ "$packageManager" == "pacman" ]]; then
        echo -e "${GREEN} > Detected Main Package Manager is pacman${NC}"
	    echo -e "${GREEN} > Install docker engine ...${NC}"
        pacman -Suy 
        yes | pacman -S docker
	    echo -e "${GREEN} > Start docker.service ...${NC}"
	    service docker start && systemctl start docker
        echo -e "${GREEN} > Install docker-compose ...${NC}"
        yes | pacman -S docker-compose
        echo -e "${GREEN} > Setup default compose ...${NC}"
        docker-compose -f docker/default.docker-compose.yml up -d
        echo -e "${GREEN}>> Setup completed${NC}"

    elif [[ "$packageManager" == "dnf" ]]; then
        echo -e "${GREEN} > Detected Main Package Manager is dnf${NC}"
        echo -e "${GREEN} > Install docker engine ...${NC}"
        dnf install docker-ce -y
        echo -e "${GREEN} > Start docker.service ...${NC}"
        systemctl start docker.service
        echo -e "${GREEN} > Install docker-compose ...${NC}"
        dnf install docker-compose -y
        echo -e "${GREEN} > Setup default compose ...${NC}"
        docker-compose -f docker/default.docker-compose.yml up -d
        echo -e "${GREEN}>> Setup completed${NC}"

    elif [[ "$packageManager" == "zypper" ]]; then
        echo -e "${GREEN} > Detected Main Package Manager is zypper${NC}"
        echo -e "${GREEN} > Install docker engine ...${NC}"
        zypper install docker -y
        echo -e "${GREEN} > Start docker.service ...${NC}"
        systemctl start docker.service
        echo -e "${GREEN} > Install docker-compose ...${NC}"
        zypper install docker-compose -y
        echo -e "${GREEN} > Setup default compose ...${NC}"
        docker-compose -f docker/default.docker-compose.yml up -d
        echo -e "${GREEN}>> Setup completed${NC}"

    elif [[ "$packageManager" == "apk" ]]; then
        echo -e "${GREEN} > Detected Main Package Manager is apk${NC}"
	    echo -e "${GREEN} > Install docker engine ...${NC}"
        apk add docker -y
        echo -e "${GREEN} > Start docker.service ..."
        rc-update add docker default && /etc/init.d/docker start
        echo -e "${GREEN} > Install docker-compose ...${NC}"
        apk add docker-compose -y
        echo -e "${GREEN} > Setup default compose ...${NC}"
        docker-compose -f docker/default.docker-compose.yml up -d
        echo -e "${GREEN}>> Setup completed${NC}"

    else
        echo -e "${RED}>> Unsupportet package manager: $packageManager${NC}"
    fi
}

#################################################
#		Execute Script			#
#################################################
executionCall $(detectPackageManager)
